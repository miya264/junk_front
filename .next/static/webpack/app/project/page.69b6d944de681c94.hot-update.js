"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/project/page",{

/***/ "(app-pages-browser)/./src/services/apiClient.ts":
/*!***********************************!*\
  !*** ./src/services/apiClient.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_BASE_URL: function() { return /* binding */ API_BASE_URL; },\n/* harmony export */   ApiError: function() { return /* binding */ ApiError; },\n/* harmony export */   apiRequest: function() { return /* binding */ apiRequest; },\n/* harmony export */   del: function() { return /* binding */ del; },\n/* harmony export */   get: function() { return /* binding */ get; },\n/* harmony export */   healthCheck: function() { return /* binding */ healthCheck; },\n/* harmony export */   post: function() { return /* binding */ post; },\n/* harmony export */   put: function() { return /* binding */ put; },\n/* harmony export */   testConnection: function() { return /* binding */ testConnection; }\n/* harmony export */ });\n/**\r\n * 中央集権的なAPI管理クライアント\r\n * 本番=絶対URL直叩き / ローカル= /api 経由（Nextのrewrite）\r\n */ // 末尾スラッシュ除去して使う\nconst envEndpoint = (\"https://aps-junk-02-h7hxetfcdkfpeydk.canadacentral-01.azurewebsites.net\" || 0).replace(/\\/$/, \"\");\n// 本番: ENV があればそのまま使う（クロスオリジンだが FastAPI(CORS *) で許可）\n// 開発: ENV が無ければ Next の rewrite を使う（同一オリジン /api）\nconst API_BASE_URL = envEndpoint || \"/api\";\nclass ApiError extends Error {\n    constructor(status, message, data){\n        super(message);\n        this.status = status;\n        this.data = data;\n        this.name = \"ApiError\";\n    }\n}\nasync function apiRequest(endpoint) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const url = \"\".concat(API_BASE_URL).concat(endpoint);\n    try {\n        const res = await fetch(url, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...options.headers || {}\n            },\n            ...options\n        });\n        const ct = res.headers.get(\"content-type\") || \"\";\n        const data = ct.includes(\"application/json\") ? await res.json() : await res.text();\n        if (!res.ok) {\n            const msg = typeof data === \"object\" && (data === null || data === void 0 ? void 0 : data.detail) ? data.detail : typeof data === \"string\" ? data : \"HTTP \".concat(res.status);\n            throw new ApiError(res.status, msg, data);\n        }\n        return data;\n    } catch (e) {\n        if (e instanceof ApiError) throw e;\n        throw new ApiError(0, e instanceof Error ? e.message : \"Network error\");\n    }\n}\nconst get = (e)=>apiRequest(e, {\n        method: \"GET\"\n    });\nconst post = (e, body)=>apiRequest(e, {\n        method: \"POST\",\n        body: JSON.stringify(body)\n    });\nconst put = (e, body)=>apiRequest(e, {\n        method: \"PUT\",\n        body: JSON.stringify(body)\n    });\nconst del = (e)=>apiRequest(e, {\n        method: \"DELETE\"\n    });\nconst healthCheck = ()=>get(\"/\");\nconst testConnection = async ()=>{\n    try {\n        await healthCheck();\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9hcGlDbGllbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7OztDQUdDLEdBRUQsZ0JBQWdCO0FBQ2hCLE1BQU1BLGNBQWMsQ0FBQ0MseUVBQW9DLElBQUksQ0FBQyxFQUFHRyxPQUFPLENBQUMsT0FBTztBQUVoRixvREFBb0Q7QUFDcEQsZ0RBQWdEO0FBQ3pDLE1BQU1DLGVBQWVMLGVBQWUsT0FBTztBQUUzQyxNQUFNTSxpQkFBaUJDO0lBQzVCQyxZQUFZLE1BQXFCLEVBQUVFLE9BQWUsRUFBRSxJQUFpQixDQUFFO1FBQ3JFLEtBQUssQ0FBQ0E7YUFEV0QsU0FBQUE7YUFBd0NFLE9BQUFBO1FBRXpELElBQUksQ0FBQ0MsSUFBSSxHQUFHO0lBQ2Q7QUFDRjtBQUVPLGVBQWVDLFdBQWNDLFFBQWdCO1FBQUVDLFVBQUFBLGlFQUF1QixDQUFDO0lBQzVFLE1BQU1DLE1BQU0sR0FBa0JGLE9BQWZULGNBQXdCLE9BQVRTO0lBRTlCLElBQUk7UUFDRixNQUFNRyxNQUFNLE1BQU1DLE1BQU1GLEtBQUs7WUFDM0JHLFNBQVM7Z0JBQUUsZ0JBQWdCO2dCQUFvQixHQUFJSixRQUFRSSxPQUFPLElBQUksQ0FBQyxDQUFDO1lBQUU7WUFDMUUsR0FBR0osT0FBTztRQUNaO1FBRUEsTUFBTUssS0FBS0gsSUFBSUUsT0FBTyxDQUFDRSxHQUFHLENBQUMsbUJBQW1CO1FBQzlDLE1BQU1WLE9BQU9TLEdBQUdFLFFBQVEsQ0FBQyxzQkFBc0IsTUFBTUwsSUFBSU0sSUFBSSxLQUFLLE1BQU1OLElBQUlPLElBQUk7UUFFaEYsSUFBSSxDQUFDUCxJQUFJUSxFQUFFLEVBQUU7WUFDWCxNQUFNQyxNQUFNLE9BQU9mLFNBQVMsYUFBYUEsaUJBQUFBLDJCQUFELEtBQWVnQixNQUFNLElBQ3pELEtBQWNBLE1BQU0sR0FDcEIsT0FBT2hCLFNBQVMsV0FDZEEsT0FDQSxRQUFtQixPQUFYTSxJQUFJUixNQUFNO1lBQ3hCLE1BQU0sSUFBSUgsU0FBU1csSUFBSVIsTUFBTSxFQUFFaUIsS0FBS2Y7UUFDdEM7UUFFQSxPQUFPQTtJQUNULEVBQUUsT0FBT2lCLEdBQUc7UUFDVixJQUFJQSxhQUFhdEIsVUFBVSxNQUFNc0I7UUFDakMsTUFBTSxJQUFJdEIsU0FBUyxHQUFHc0IsYUFBYXJCLFFBQVFxQixFQUFFbEIsT0FBTyxHQUFHO0lBQ3pEO0FBQ0Y7QUFFTyxNQUFNVyxNQUFPLENBQUlPLElBQWNmLFdBQWNlLEdBQUc7UUFBRUMsUUFBUTtJQUFNLEdBQUc7QUFDbkUsTUFBTUMsT0FBTyxDQUFJRixHQUFXRyxPQUFjbEIsV0FBY2UsR0FBRztRQUFFQyxRQUFRO1FBQVFFLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ0Y7SUFBTSxHQUFHO0FBQzNHLE1BQU1HLE1BQU8sQ0FBSU4sR0FBV0csT0FBY2xCLFdBQWNlLEdBQUc7UUFBRUMsUUFBUTtRQUFRRSxNQUFNQyxLQUFLQyxTQUFTLENBQUNGO0lBQU0sR0FBRztBQUMzRyxNQUFNSSxNQUFPLENBQUlQLElBQXNCZixXQUFjZSxHQUFHO1FBQUVDLFFBQVE7SUFBUyxHQUFHO0FBRTlFLE1BQU1PLGNBQWdCLElBQU1mLElBQXlCLEtBQUs7QUFDMUQsTUFBTWdCLGlCQUFpQjtJQUFjLElBQUk7UUFBRSxNQUFNRDtRQUFlLE9BQU87SUFBTSxFQUFFLFVBQU07UUFBRSxPQUFPO0lBQU87QUFBRSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zZXJ2aWNlcy9hcGlDbGllbnQudHM/N2QwMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICog5Lit5aSu6ZuG5qip55qE44GqQVBJ566h55CG44Kv44Op44Kk44Ki44Oz44OIXHJcbiAqIOacrOeVqj3ntbblr75VUkznm7Tlj6njgY0gLyDjg63jg7zjgqvjg6s9IC9hcGkg57WM55Sx77yITmV4dOOBrnJld3JpdGXvvIlcclxuICovXHJcblxyXG4vLyDmnKvlsL7jgrnjg6njg4Pjgrfjg6XpmaTljrvjgZfjgabkvb/jgYZcclxuY29uc3QgZW52RW5kcG9pbnQgPSAocHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX0VORFBPSU5UIHx8ICcnKS5yZXBsYWNlKC9cXC8kLywgJycpO1xyXG5cclxuLy8g5pys55WqOiBFTlYg44GM44GC44KM44Gw44Gd44Gu44G+44G+5L2/44GG77yI44Kv44Ot44K544Kq44Oq44K444Oz44Gg44GMIEZhc3RBUEkoQ09SUyAqKSDjgafoqLHlj6/vvIlcclxuLy8g6ZaL55m6OiBFTlYg44GM54Sh44GR44KM44GwIE5leHQg44GuIHJld3JpdGUg44KS5L2/44GG77yI5ZCM5LiA44Kq44Oq44K444OzIC9hcGnvvIlcclxuZXhwb3J0IGNvbnN0IEFQSV9CQVNFX1VSTCA9IGVudkVuZHBvaW50IHx8ICcvYXBpJztcclxuXHJcbmV4cG9ydCBjbGFzcyBBcGlFcnJvciBleHRlbmRzIEVycm9yIHtcclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgc3RhdHVzOiBudW1iZXIsIG1lc3NhZ2U6IHN0cmluZywgcHVibGljIGRhdGE/OiBhbnkpIHtcclxuICAgIHN1cGVyKG1lc3NhZ2UpO1xyXG4gICAgdGhpcy5uYW1lID0gJ0FwaUVycm9yJztcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhcGlSZXF1ZXN0PFQ+KGVuZHBvaW50OiBzdHJpbmcsIG9wdGlvbnM6IFJlcXVlc3RJbml0ID0ge30pOiBQcm9taXNlPFQ+IHtcclxuICBjb25zdCB1cmwgPSBgJHtBUElfQkFTRV9VUkx9JHtlbmRwb2ludH1gO1xyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsLCB7XHJcbiAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywgLi4uKG9wdGlvbnMuaGVhZGVycyB8fCB7fSkgfSxcclxuICAgICAgLi4ub3B0aW9ucywgLy8g4oaQIG1vZGUvY3JlZGVudGlhbHMg44Gv5piO56S644GX44Gq44GE77yI5L2Z6KiI44GqIHByZWZsaWdodCDjgpLpgb/jgZHjgovvvIlcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IGN0ID0gcmVzLmhlYWRlcnMuZ2V0KCdjb250ZW50LXR5cGUnKSB8fCAnJztcclxuICAgIGNvbnN0IGRhdGEgPSBjdC5pbmNsdWRlcygnYXBwbGljYXRpb24vanNvbicpID8gYXdhaXQgcmVzLmpzb24oKSA6IGF3YWl0IHJlcy50ZXh0KCk7XHJcblxyXG4gICAgaWYgKCFyZXMub2spIHtcclxuICAgICAgY29uc3QgbXNnID0gdHlwZW9mIGRhdGEgPT09ICdvYmplY3QnICYmIChkYXRhIGFzIGFueSk/LmRldGFpbFxyXG4gICAgICAgID8gKGRhdGEgYXMgYW55KS5kZXRhaWxcclxuICAgICAgICA6IHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJ1xyXG4gICAgICAgICAgPyBkYXRhXHJcbiAgICAgICAgICA6IGBIVFRQICR7cmVzLnN0YXR1c31gO1xyXG4gICAgICB0aHJvdyBuZXcgQXBpRXJyb3IocmVzLnN0YXR1cywgbXNnLCBkYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZGF0YSBhcyBUO1xyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICAgIGlmIChlIGluc3RhbmNlb2YgQXBpRXJyb3IpIHRocm93IGU7XHJcbiAgICB0aHJvdyBuZXcgQXBpRXJyb3IoMCwgZSBpbnN0YW5jZW9mIEVycm9yID8gZS5tZXNzYWdlIDogJ05ldHdvcmsgZXJyb3InKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXQgID0gPFQ+KGU6IHN0cmluZykgPT4gYXBpUmVxdWVzdDxUPihlLCB7IG1ldGhvZDogJ0dFVCcgfSk7XHJcbmV4cG9ydCBjb25zdCBwb3N0ID0gPFQ+KGU6IHN0cmluZywgYm9keTogYW55KSA9PiBhcGlSZXF1ZXN0PFQ+KGUsIHsgbWV0aG9kOiAnUE9TVCcsIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpIH0pO1xyXG5leHBvcnQgY29uc3QgcHV0ICA9IDxUPihlOiBzdHJpbmcsIGJvZHk6IGFueSkgPT4gYXBpUmVxdWVzdDxUPihlLCB7IG1ldGhvZDogJ1BVVCcsICBib2R5OiBKU09OLnN0cmluZ2lmeShib2R5KSB9KTtcclxuZXhwb3J0IGNvbnN0IGRlbCAgPSA8VD4oZTogc3RyaW5nKSAgICAgICAgID0+IGFwaVJlcXVlc3Q8VD4oZSwgeyBtZXRob2Q6ICdERUxFVEUnIH0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhlYWx0aENoZWNrICAgPSAoKSA9PiBnZXQ8eyBtZXNzYWdlOiBzdHJpbmcgfT4oJy8nKTtcclxuZXhwb3J0IGNvbnN0IHRlc3RDb25uZWN0aW9uID0gYXN5bmMgKCkgPT4geyB0cnkgeyBhd2FpdCBoZWFsdGhDaGVjaygpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCB7IHJldHVybiBmYWxzZTsgfSB9O1xyXG4iXSwibmFtZXMiOlsiZW52RW5kcG9pbnQiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX0VORFBPSU5UIiwicmVwbGFjZSIsIkFQSV9CQVNFX1VSTCIsIkFwaUVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsInN0YXR1cyIsIm1lc3NhZ2UiLCJkYXRhIiwibmFtZSIsImFwaVJlcXVlc3QiLCJlbmRwb2ludCIsIm9wdGlvbnMiLCJ1cmwiLCJyZXMiLCJmZXRjaCIsImhlYWRlcnMiLCJjdCIsImdldCIsImluY2x1ZGVzIiwianNvbiIsInRleHQiLCJvayIsIm1zZyIsImRldGFpbCIsImUiLCJtZXRob2QiLCJwb3N0IiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJwdXQiLCJkZWwiLCJoZWFsdGhDaGVjayIsInRlc3RDb25uZWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/apiClient.ts\n"));

/***/ })

});