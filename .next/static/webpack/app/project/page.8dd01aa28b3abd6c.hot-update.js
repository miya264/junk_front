"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/project/page",{

/***/ "(app-pages-browser)/./src/services/apiClient.ts":
/*!***********************************!*\
  !*** ./src/services/apiClient.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_BASE_URL: function() { return /* binding */ API_BASE_URL; },\n/* harmony export */   ApiError: function() { return /* binding */ ApiError; },\n/* harmony export */   apiRequest: function() { return /* binding */ apiRequest; },\n/* harmony export */   del: function() { return /* binding */ del; },\n/* harmony export */   get: function() { return /* binding */ get; },\n/* harmony export */   healthCheck: function() { return /* binding */ healthCheck; },\n/* harmony export */   post: function() { return /* binding */ post; },\n/* harmony export */   put: function() { return /* binding */ put; },\n/* harmony export */   testConnection: function() { return /* binding */ testConnection; }\n/* harmony export */ });\n/**\r\n * 中央集権的なAPI管理クライアント\r\n * すべて /api に投げ、Next の rewrites に任せる\r\n */ // もう “http://127.0.0.1:8000” などは使わず固定で /api\nconst API_BASE_URL = \"/api\";\n// エラーハンドリング\nclass ApiError extends Error {\n    constructor(status, message, data){\n        super(message);\n        this.status = status;\n        this.data = data;\n        this.name = \"ApiError\";\n    }\n}\n// 共通リクエスト\nasync function apiRequest(endpoint) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const url = \"\".concat(API_BASE_URL).concat(endpoint);\n    try {\n        const response = await fetch(url, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...options.headers || {}\n            },\n            // ← rewrites 経由で同一オリジンになるので mode 指定は不要\n            ...options\n        });\n        const contentType = response.headers.get(\"content-type\") || \"\";\n        const data = contentType.includes(\"application/json\") ? await response.json() : await response.text();\n        if (!response.ok) {\n            const msg = typeof data === \"object\" && (data === null || data === void 0 ? void 0 : data.detail) ? data.detail : typeof data === \"string\" ? data : \"HTTP \".concat(response.status);\n            throw new ApiError(response.status, msg, data);\n        }\n        return data;\n    } catch (err) {\n        if (err instanceof ApiError) throw err;\n        throw new ApiError(0, err instanceof Error ? err.message : \"Network error\");\n    }\n}\nconst get = (e)=>apiRequest(e, {\n        method: \"GET\"\n    });\nconst post = (e, body)=>apiRequest(e, {\n        method: \"POST\",\n        body: JSON.stringify(body)\n    });\nconst put = (e, body)=>apiRequest(e, {\n        method: \"PUT\",\n        body: JSON.stringify(body)\n    });\nconst del = (e)=>apiRequest(e, {\n        method: \"DELETE\"\n    });\nasync function healthCheck() {\n    return get(\"/\");\n}\nasync function testConnection() {\n    try {\n        await healthCheck();\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9hcGlDbGllbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7OztDQUdDLEdBRUQsNENBQTRDO0FBQ3JDLE1BQU1BLGVBQWUsT0FBTztBQUVuQyxZQUFZO0FBQ0wsTUFBTUMsaUJBQWlCQztJQUM1QkMsWUFBWSxNQUFxQixFQUFFRSxPQUFlLEVBQUUsSUFBaUIsQ0FBRTtRQUNyRSxLQUFLLENBQUNBO2FBRFdELFNBQUFBO2FBQXdDRSxPQUFBQTtRQUV6RCxJQUFJLENBQUNDLElBQUksR0FBRztJQUNkO0FBQ0Y7QUFFQSxVQUFVO0FBQ0gsZUFBZUMsV0FDcEJDLFFBQWdCO1FBQ2hCQyxVQUFBQSxpRUFBdUIsQ0FBQztJQUV4QixNQUFNQyxNQUFNLEdBQWtCRixPQUFmVCxjQUF3QixPQUFUUztJQUU5QixJQUFJO1FBQ0YsTUFBTUcsV0FBVyxNQUFNQyxNQUFNRixLQUFLO1lBQ2hDRyxTQUFTO2dCQUFFLGdCQUFnQjtnQkFBb0IsR0FBSUosUUFBUUksT0FBTyxJQUFJLENBQUMsQ0FBQztZQUFFO1lBQzFFLHVDQUF1QztZQUN2QyxHQUFHSixPQUFPO1FBQ1o7UUFFQSxNQUFNSyxjQUFjSCxTQUFTRSxPQUFPLENBQUNFLEdBQUcsQ0FBQyxtQkFBbUI7UUFDNUQsTUFBTVYsT0FBT1MsWUFBWUUsUUFBUSxDQUFDLHNCQUM5QixNQUFNTCxTQUFTTSxJQUFJLEtBQ25CLE1BQU1OLFNBQVNPLElBQUk7UUFFdkIsSUFBSSxDQUFDUCxTQUFTUSxFQUFFLEVBQUU7WUFDaEIsTUFBTUMsTUFDSixPQUFPZixTQUFTLGFBQVlBLGlCQUFBQSwyQkFBQUEsS0FBTWdCLE1BQU0sSUFDcENoQixLQUFLZ0IsTUFBTSxHQUNYLE9BQU9oQixTQUFTLFdBQ2hCQSxPQUNBLFFBQXdCLE9BQWhCTSxTQUFTUixNQUFNO1lBQzdCLE1BQU0sSUFBSUgsU0FBU1csU0FBU1IsTUFBTSxFQUFFaUIsS0FBS2Y7UUFDM0M7UUFFQSxPQUFPQTtJQUNULEVBQUUsT0FBT2lCLEtBQUs7UUFDWixJQUFJQSxlQUFldEIsVUFBVSxNQUFNc0I7UUFDbkMsTUFBTSxJQUFJdEIsU0FBUyxHQUFHc0IsZUFBZXJCLFFBQVFxQixJQUFJbEIsT0FBTyxHQUFHO0lBQzdEO0FBQ0Y7QUFFTyxNQUFNVyxNQUFNLENBQUlRLElBQWNoQixXQUFjZ0IsR0FBRztRQUFFQyxRQUFRO0lBQU0sR0FBRztBQUNsRSxNQUFNQyxPQUFPLENBQUlGLEdBQVdHLE9BQ2pDbkIsV0FBY2dCLEdBQUc7UUFBRUMsUUFBUTtRQUFRRSxNQUFNQyxLQUFLQyxTQUFTLENBQUNGO0lBQU0sR0FBRztBQUM1RCxNQUFNRyxNQUFNLENBQUlOLEdBQVdHLE9BQ2hDbkIsV0FBY2dCLEdBQUc7UUFBRUMsUUFBUTtRQUFPRSxNQUFNQyxLQUFLQyxTQUFTLENBQUNGO0lBQU0sR0FBRztBQUMzRCxNQUFNSSxNQUFNLENBQUlQLElBQWNoQixXQUFjZ0IsR0FBRztRQUFFQyxRQUFRO0lBQVMsR0FBRztBQUVyRSxlQUFlTztJQUNwQixPQUFPaEIsSUFBeUI7QUFDbEM7QUFDTyxlQUFlaUI7SUFDcEIsSUFBSTtRQUNGLE1BQU1EO1FBQ04sT0FBTztJQUNULEVBQUUsVUFBTTtRQUNOLE9BQU87SUFDVDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zZXJ2aWNlcy9hcGlDbGllbnQudHM/N2QwMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICog5Lit5aSu6ZuG5qip55qE44GqQVBJ566h55CG44Kv44Op44Kk44Ki44Oz44OIXHJcbiAqIOOBmeOBueOBpiAvYXBpIOOBq+aKleOBkuOAgU5leHQg44GuIHJld3JpdGVzIOOBq+S7u+OBm+OCi1xyXG4gKi9cclxuXHJcbi8vIOOCguOBhiDigJxodHRwOi8vMTI3LjAuMC4xOjgwMDDigJ0g44Gq44Gp44Gv5L2/44KP44Ga5Zu65a6a44GnIC9hcGlcclxuZXhwb3J0IGNvbnN0IEFQSV9CQVNFX1VSTCA9ICcvYXBpJztcclxuXHJcbi8vIOOCqOODqeODvOODj+ODs+ODieODquODs+OCsFxyXG5leHBvcnQgY2xhc3MgQXBpRXJyb3IgZXh0ZW5kcyBFcnJvciB7XHJcbiAgY29uc3RydWN0b3IocHVibGljIHN0YXR1czogbnVtYmVyLCBtZXNzYWdlOiBzdHJpbmcsIHB1YmxpYyBkYXRhPzogYW55KSB7XHJcbiAgICBzdXBlcihtZXNzYWdlKTtcclxuICAgIHRoaXMubmFtZSA9ICdBcGlFcnJvcic7XHJcbiAgfVxyXG59XHJcblxyXG4vLyDlhbHpgJrjg6rjgq/jgqjjgrnjg4hcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFwaVJlcXVlc3Q8VD4oXHJcbiAgZW5kcG9pbnQ6IHN0cmluZyxcclxuICBvcHRpb25zOiBSZXF1ZXN0SW5pdCA9IHt9XHJcbik6IFByb21pc2U8VD4ge1xyXG4gIGNvbnN0IHVybCA9IGAke0FQSV9CQVNFX1VSTH0ke2VuZHBvaW50fWA7XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xyXG4gICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsIC4uLihvcHRpb25zLmhlYWRlcnMgfHwge30pIH0sXHJcbiAgICAgIC8vIOKGkCByZXdyaXRlcyDntYznlLHjgaflkIzkuIDjgqrjg6rjgrjjg7Pjgavjgarjgovjga7jgacgbW9kZSDmjIflrprjga/kuI3opoFcclxuICAgICAgLi4ub3B0aW9ucyxcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IGNvbnRlbnRUeXBlID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoJ2NvbnRlbnQtdHlwZScpIHx8ICcnO1xyXG4gICAgY29uc3QgZGF0YSA9IGNvbnRlbnRUeXBlLmluY2x1ZGVzKCdhcHBsaWNhdGlvbi9qc29uJylcclxuICAgICAgPyBhd2FpdCByZXNwb25zZS5qc29uKClcclxuICAgICAgOiBhd2FpdCByZXNwb25zZS50ZXh0KCk7XHJcblxyXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICBjb25zdCBtc2cgPVxyXG4gICAgICAgIHR5cGVvZiBkYXRhID09PSAnb2JqZWN0JyAmJiBkYXRhPy5kZXRhaWxcclxuICAgICAgICAgID8gZGF0YS5kZXRhaWxcclxuICAgICAgICAgIDogdHlwZW9mIGRhdGEgPT09ICdzdHJpbmcnXHJcbiAgICAgICAgICA/IGRhdGFcclxuICAgICAgICAgIDogYEhUVFAgJHtyZXNwb25zZS5zdGF0dXN9YDtcclxuICAgICAgdGhyb3cgbmV3IEFwaUVycm9yKHJlc3BvbnNlLnN0YXR1cywgbXNnLCBkYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZGF0YSBhcyBUO1xyXG4gIH0gY2F0Y2ggKGVycikge1xyXG4gICAgaWYgKGVyciBpbnN0YW5jZW9mIEFwaUVycm9yKSB0aHJvdyBlcnI7XHJcbiAgICB0aHJvdyBuZXcgQXBpRXJyb3IoMCwgZXJyIGluc3RhbmNlb2YgRXJyb3IgPyBlcnIubWVzc2FnZSA6ICdOZXR3b3JrIGVycm9yJyk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0ID0gPFQ+KGU6IHN0cmluZykgPT4gYXBpUmVxdWVzdDxUPihlLCB7IG1ldGhvZDogJ0dFVCcgfSk7XHJcbmV4cG9ydCBjb25zdCBwb3N0ID0gPFQ+KGU6IHN0cmluZywgYm9keTogYW55KSA9PlxyXG4gIGFwaVJlcXVlc3Q8VD4oZSwgeyBtZXRob2Q6ICdQT1NUJywgYm9keTogSlNPTi5zdHJpbmdpZnkoYm9keSkgfSk7XHJcbmV4cG9ydCBjb25zdCBwdXQgPSA8VD4oZTogc3RyaW5nLCBib2R5OiBhbnkpID0+XHJcbiAgYXBpUmVxdWVzdDxUPihlLCB7IG1ldGhvZDogJ1BVVCcsIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpIH0pO1xyXG5leHBvcnQgY29uc3QgZGVsID0gPFQ+KGU6IHN0cmluZykgPT4gYXBpUmVxdWVzdDxUPihlLCB7IG1ldGhvZDogJ0RFTEVURScgfSk7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGVhbHRoQ2hlY2soKTogUHJvbWlzZTx7IG1lc3NhZ2U6IHN0cmluZyB9PiB7XHJcbiAgcmV0dXJuIGdldDx7IG1lc3NhZ2U6IHN0cmluZyB9PignLycpO1xyXG59XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB0ZXN0Q29ubmVjdGlvbigpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICB0cnkge1xyXG4gICAgYXdhaXQgaGVhbHRoQ2hlY2soKTtcclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH0gY2F0Y2gge1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiQVBJX0JBU0VfVVJMIiwiQXBpRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwic3RhdHVzIiwibWVzc2FnZSIsImRhdGEiLCJuYW1lIiwiYXBpUmVxdWVzdCIsImVuZHBvaW50Iiwib3B0aW9ucyIsInVybCIsInJlc3BvbnNlIiwiZmV0Y2giLCJoZWFkZXJzIiwiY29udGVudFR5cGUiLCJnZXQiLCJpbmNsdWRlcyIsImpzb24iLCJ0ZXh0Iiwib2siLCJtc2ciLCJkZXRhaWwiLCJlcnIiLCJlIiwibWV0aG9kIiwicG9zdCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwicHV0IiwiZGVsIiwiaGVhbHRoQ2hlY2siLCJ0ZXN0Q29ubmVjdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/apiClient.ts\n"));

/***/ })

});